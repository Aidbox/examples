// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import { Age } from './Age';
import { BackboneElement } from './BackboneElement';
import { CodeableConcept } from './CodeableConcept';
import { ContactDetail } from './ContactDetail';
import { DataRequirement } from './DataRequirement';
import { DomainResource } from './DomainResource';
import { Duration } from './Duration';
import { Expression } from './Expression';
import { Identifier } from './Identifier';
import { Period } from './Period';
import { Quantity } from './Quantity';
import { Range } from './Range';
import { Reference } from './Reference';
import { RelatedArtifact } from './RelatedArtifact';
import { Timing } from './Timing';
import { TriggerDefinition } from './TriggerDefinition';
import { UsageContext } from './UsageContext';


export interface PlanDefinitionAction extends BackboneElement {
    action?: PlanDefinitionAction[];
    cardinalityBehavior?: 'single' | 'multiple';
    code?: CodeableConcept[];
    condition?: PlanDefinitionActionCondition[];
    definitionCanonical?: string;
    definitionUri?: string;
    description?: string;
    documentation?: RelatedArtifact[];
    dynamicValue?: PlanDefinitionActionDynamicValue[];
    goalId?: string[];
    groupingBehavior?: 'visual-group' | 'logical-group' | 'sentence-group';
    input?: DataRequirement[];
    output?: DataRequirement[];
    participant?: PlanDefinitionActionParticipant[];
    precheckBehavior?: 'yes' | 'no';
    prefix?: string;
    priority?: 'routine' | 'urgent' | 'asap' | 'stat';
    reason?: CodeableConcept[];
    relatedAction?: PlanDefinitionActionRelatedAction[];
    requiredBehavior?: 'must' | 'could' | 'must-unless-documented';
    selectionBehavior?: 'any' | 'all' | 'all-or-none' | 'exactly-one' | 'at-most-one' | 'one-or-more';
    subjectCodeableConcept?: CodeableConcept;
    subjectReference?: Reference<'Group'>;
    textEquivalent?: string;
    timingAge?: Age;
    timingDateTime?: string;
    timingDuration?: Duration;
    timingPeriod?: Period;
    timingRange?: Range;
    timingTiming?: Timing;
    title?: string;
    transform?: string;
    trigger?: TriggerDefinition[];
    type?: CodeableConcept;
}

export interface PlanDefinitionActionCondition extends BackboneElement {
    expression?: Expression;
    kind: 'applicability' | 'start' | 'stop';
}

export interface PlanDefinitionActionDynamicValue extends BackboneElement {
    expression?: Expression;
    path?: string;
}

export interface PlanDefinitionActionParticipant extends BackboneElement {
    role?: CodeableConcept;
    type: 'patient' | 'practitioner' | 'related-person' | 'device';
}

export interface PlanDefinitionActionRelatedAction extends BackboneElement {
    actionId: string;
    offsetDuration?: Duration;
    offsetRange?: Range;
    relationship: 'before-start' | 'before' | 'before-end' | 'concurrent-with-start' | 'concurrent' | 'concurrent-with-end' | 'after-start' | 'after' | 'after-end';
}

export interface PlanDefinitionGoal extends BackboneElement {
    addresses?: CodeableConcept[];
    category?: CodeableConcept;
    description: CodeableConcept;
    documentation?: RelatedArtifact[];
    priority?: CodeableConcept;
    start?: CodeableConcept;
    target?: PlanDefinitionGoalTarget[];
}

export interface PlanDefinitionGoalTarget extends BackboneElement {
    detailCodeableConcept?: CodeableConcept;
    detailQuantity?: Quantity;
    detailRange?: Range;
    due?: Duration;
    measure?: CodeableConcept;
}

export interface PlanDefinition extends DomainResource {
    action?: PlanDefinitionAction[];
    approvalDate?: string;
    _approvalDate?: Element;
    author?: ContactDetail[];
    contact?: ContactDetail[];
    copyright?: string;
    _copyright?: Element;
    date?: string;
    _date?: Element;
    description?: string;
    _description?: Element;
    editor?: ContactDetail[];
    effectivePeriod?: Period;
    endorser?: ContactDetail[];
    experimental?: boolean;
    _experimental?: Element;
    goal?: PlanDefinitionGoal[];
    identifier?: Identifier[];
    jurisdiction?: CodeableConcept[];
    lastReviewDate?: string;
    _lastReviewDate?: Element;
    library?: string[];
    _library?: Element;
    name?: string;
    _name?: Element;
    publisher?: string;
    _publisher?: Element;
    purpose?: string;
    _purpose?: Element;
    relatedArtifact?: RelatedArtifact[];
    reviewer?: ContactDetail[];
    status: 'draft' | 'active' | 'retired' | 'unknown';
    _status?: Element;
    subjectCodeableConcept?: CodeableConcept;
    subjectReference?: Reference<'Group'>;
    subtitle?: string;
    _subtitle?: Element;
    title?: string;
    _title?: Element;
    topic?: CodeableConcept[];
    type?: CodeableConcept;
    url?: string;
    _url?: Element;
    usage?: string;
    _usage?: Element;
    useContext?: UsageContext[];
    version?: string;
    _version?: Element;
}

