{
  "id": "a897d5dc-dad5-4a2e-9670-8392f62bde1f",
  "realm": "master",
  "displayName": "Keycloak",
  "displayNameHtml": "<div class=\"kc-logo-text\"><span>Keycloak</span></div>",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 60,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "bruteForceStrategy": "MULTIPLE",
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "32cef48f-ec94-43c9-b446-cfdb152198d4",
        "name": "admin",
        "description": "${role_admin}",
        "composite": true,
        "composites": {
          "realm": ["create-realm"],
          "client": {
            "master-realm": [
              "manage-identity-providers",
              "view-realm",
              "query-groups",
              "query-realms",
              "query-clients",
              "view-users",
              "view-clients",
              "manage-realm",
              "create-client",
              "manage-clients",
              "view-events",
              "view-authorization",
              "manage-authorization",
              "query-users",
              "view-identity-providers",
              "manage-events",
              "manage-users",
              "impersonation"
            ]
          }
        },
        "clientRole": false,
        "containerId": "a897d5dc-dad5-4a2e-9670-8392f62bde1f",
        "attributes": {}
      },
      {
        "id": "994ce6b6-9e1c-49f1-8bfa-937032990647",
        "name": "create-realm",
        "description": "${role_create-realm}",
        "composite": false,
        "clientRole": false,
        "containerId": "a897d5dc-dad5-4a2e-9670-8392f62bde1f",
        "attributes": {}
      },
      {
        "id": "2c81e967-37fe-4429-bd00-be132ee3bf91",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "a897d5dc-dad5-4a2e-9670-8392f62bde1f",
        "attributes": {}
      },
      {
        "id": "63970820-8a21-478e-8a74-25df26a2dd41",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "a897d5dc-dad5-4a2e-9670-8392f62bde1f",
        "attributes": {}
      },
      {
        "id": "29a7816a-1841-4e4f-85be-2d09fe06ac9f",
        "name": "default-roles-master",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"],
          "client": {
            "account": ["manage-account", "view-profile"]
          }
        },
        "clientRole": false,
        "containerId": "a897d5dc-dad5-4a2e-9670-8392f62bde1f",
        "attributes": {}
      }
    ],
    "client": {
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "9d7541d6-0ef5-46c8-bc03-6090ca04b5d5",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "518c0f9e-32aa-49ec-adc2-4b710dc1a205",
          "attributes": {}
        }
      ],
      "master-realm": [
        {
          "id": "51c4958e-c449-4da7-b176-6dcae18dd746",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "f1ed1a53-1c5f-44a7-b59a-80bfe40447af",
          "attributes": {}
        },
        {
          "id": "6d823b21-3c28-4f85-abd7-83bc5d70d8f4",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "f1ed1a53-1c5f-44a7-b59a-80bfe40447af",
          "attributes": {}
        },
        {
          "id": "f879f789-2f11-4d38-9b72-bf9b8ae5f1e3",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "f1ed1a53-1c5f-44a7-b59a-80bfe40447af",
          "attributes": {}
        },
        {
          "id": "c82684a8-0f66-48fb-800d-a7dc88659eaa",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "f1ed1a53-1c5f-44a7-b59a-80bfe40447af",
          "attributes": {}
        },
        {
          "id": "2186307f-2181-48b9-9431-ef33c72bf22f",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "f1ed1a53-1c5f-44a7-b59a-80bfe40447af",
          "attributes": {}
        },
        {
          "id": "2db46409-f3ba-476f-a855-94c57125e2a5",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "master-realm": ["query-groups", "query-users"]
            }
          },
          "clientRole": true,
          "containerId": "f1ed1a53-1c5f-44a7-b59a-80bfe40447af",
          "attributes": {}
        },
        {
          "id": "de06fac6-dfd1-4512-8462-81ea018a986a",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "f1ed1a53-1c5f-44a7-b59a-80bfe40447af",
          "attributes": {}
        },
        {
          "id": "dde3b42a-c0aa-412c-85cb-6056cc81b143",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "f1ed1a53-1c5f-44a7-b59a-80bfe40447af",
          "attributes": {}
        },
        {
          "id": "bfa39e9c-26ac-45dd-bdc1-5dc6dff9864d",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "master-realm": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "f1ed1a53-1c5f-44a7-b59a-80bfe40447af",
          "attributes": {}
        },
        {
          "id": "72ea1b81-1889-4272-9b78-1f4728121485",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "f1ed1a53-1c5f-44a7-b59a-80bfe40447af",
          "attributes": {}
        },
        {
          "id": "e4b494db-35f5-480f-9b32-8befb54d8cdb",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "f1ed1a53-1c5f-44a7-b59a-80bfe40447af",
          "attributes": {}
        },
        {
          "id": "32f260df-665f-425e-b0bb-b3b7bee61466",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "f1ed1a53-1c5f-44a7-b59a-80bfe40447af",
          "attributes": {}
        },
        {
          "id": "3ba5596c-8f8f-4a2c-ad54-ff307d6e2ed3",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "f1ed1a53-1c5f-44a7-b59a-80bfe40447af",
          "attributes": {}
        },
        {
          "id": "1c1ee37d-ce01-4d0d-ac3e-920e645a18bd",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "f1ed1a53-1c5f-44a7-b59a-80bfe40447af",
          "attributes": {}
        },
        {
          "id": "6bedd122-1c06-46a8-93db-4ee3defa6405",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "f1ed1a53-1c5f-44a7-b59a-80bfe40447af",
          "attributes": {}
        },
        {
          "id": "03c612eb-c86b-4c59-a975-3c0ccda6f392",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "f1ed1a53-1c5f-44a7-b59a-80bfe40447af",
          "attributes": {}
        },
        {
          "id": "e7d7de8a-3979-4475-95ad-81dc369b9fd5",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "f1ed1a53-1c5f-44a7-b59a-80bfe40447af",
          "attributes": {}
        },
        {
          "id": "50c23081-26a8-4fa2-9186-90a442847499",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "f1ed1a53-1c5f-44a7-b59a-80bfe40447af",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "81e9f241-2331-44fb-8c3a-cf53c93c0123",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "6ddb3dbf-67f8-44e8-aa64-1ccf575b8b3c",
          "attributes": {}
        },
        {
          "id": "64fdfda2-ad2d-448a-9a86-9ea5ecf7049c",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "6ddb3dbf-67f8-44e8-aa64-1ccf575b8b3c",
          "attributes": {}
        },
        {
          "id": "16a68d2c-8916-4c68-9790-f018d54997a8",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "6ddb3dbf-67f8-44e8-aa64-1ccf575b8b3c",
          "attributes": {}
        },
        {
          "id": "e22145d2-8ed5-443c-866e-5b59c75877ec",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "6ddb3dbf-67f8-44e8-aa64-1ccf575b8b3c",
          "attributes": {}
        },
        {
          "id": "28092145-dfd2-4d17-b558-a519708767b3",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "6ddb3dbf-67f8-44e8-aa64-1ccf575b8b3c",
          "attributes": {}
        },
        {
          "id": "c2466c0e-c62f-417b-aac4-bd716535fa36",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "6ddb3dbf-67f8-44e8-aa64-1ccf575b8b3c",
          "attributes": {}
        },
        {
          "id": "62809cbe-f0ba-4d25-b9db-3b02ca54eb8d",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "6ddb3dbf-67f8-44e8-aa64-1ccf575b8b3c",
          "attributes": {}
        },
        {
          "id": "b7c403a7-1766-4ccf-a0ae-1a0150e0728b",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "6ddb3dbf-67f8-44e8-aa64-1ccf575b8b3c",
          "attributes": {}
        }
      ],
      "my-app": [
        {
          "id": "fd633afc-3549-47a7-8189-bbfb102407de",
          "name": "user/Observation.rs?category=laboratory&status=final",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "89d77683-3882-4a58-b5b3-c4868adc9ab2",
          "attributes": {}
        },
        {
          "id": "c5f5296a-7d61-4bef-9aad-36e3d27d021d",
          "name": "lab_technician",
          "description": "",
          "composite": true,
          "composites": {
            "client": {
              "my-app": [
                "user/Observation.rs?category=laboratory&status=final",
                "user/Patient.rs"
              ]
            }
          },
          "clientRole": true,
          "containerId": "89d77683-3882-4a58-b5b3-c4868adc9ab2",
          "attributes": {}
        },
        {
          "id": "7e6990c9-b982-4fcc-ada0-f7517b6150a7",
          "name": "user/Observation.rs",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "89d77683-3882-4a58-b5b3-c4868adc9ab2",
          "attributes": {}
        },
        {
          "id": "c87fa4b5-a2a5-4395-8d16-4e2e77144bf0",
          "name": "physician",
          "description": "",
          "composite": true,
          "composites": {
            "client": {
              "my-app": [
                "user/Observation.rs",
                "user/Patient.rs",
                "user/Encounter.rs"
              ]
            }
          },
          "clientRole": true,
          "containerId": "89d77683-3882-4a58-b5b3-c4868adc9ab2",
          "attributes": {}
        },
        {
          "id": "3d1c48ba-e2c0-4ea9-b493-a1019b6505c1",
          "name": "user/Patient.rs",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "89d77683-3882-4a58-b5b3-c4868adc9ab2",
          "attributes": {}
        },
        {
          "id": "366cf30c-baf8-46e3-8807-f40610e48820",
          "name": "user/Encounter.rs",
          "description": "",
          "composite": false,
          "clientRole": true,
          "containerId": "89d77683-3882-4a58-b5b3-c4868adc9ab2",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "29a7816a-1841-4e4f-85be-2d09fe06ac9f",
    "name": "default-roles-master",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "a897d5dc-dad5-4a2e-9670-8392f62bde1f"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256", "RS256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256", "RS256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "64ff7ada-ed02-4730-945e-0bb1457516c9",
      "username": "lab_technician",
      "emailVerified": false,
      "createdTimestamp": 1759749144316,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "07990cc1-2252-487d-8a15-86d8ba9add26",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1759749162201,
          "secretData": "{\"value\":\"rMBbSvzGfoktYqxZvUwlp5dgCeil8//McvPqdq8Gq7Y=\",\"salt\":\"EY4ObSnMFvJ5GetaKyVEbg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-master"],
      "clientRoles": {
        "my-app": ["lab_technician"]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "10f4ab65-9568-43d1-ade8-75fa1b4bdb18",
      "username": "physician",
      "emailVerified": false,
      "createdTimestamp": 1759749095907,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "beab248d-91a7-45e6-9f31-d2593f982ccc",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1759749116944,
          "secretData": "{\"value\":\"aF7XDf9HyDq/ptsYZOIoVf+pNCE9vkbx1W062ExLYGM=\",\"salt\":\"eUHPdSEYH7eqoLMAa/L5iA==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-master"],
      "clientRoles": {
        "my-app": ["physician"]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "6ddb3dbf-67f8-44e8-aa64-1ccf575b8b3c",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/master/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/master/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "9eaf78f9-c7da-42c1-9019-1b94ce3350e4",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/master/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/master/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "b0a38304-3689-4908-bb0d-3ec9cf280d9c",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b0d2ccc7-565b-4a78-80ad-64a2ea8238a9",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "518c0f9e-32aa-49ec-adc2-4b710dc1a205",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f1ed1a53-1c5f-44a7-b59a-80bfe40447af",
      "clientId": "master-realm",
      "name": "master Realm",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "89d77683-3882-4a58-b5b3-c4868adc9ab2",
      "clientId": "my-app",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "BuBdhaiyKbk0Llb2YMRSF9LKyXjkASTP",
      "redirectUris": ["http://localhost:3000/callback"],
      "webOrigins": ["/*"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1759329897",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "http://localhost:3000/logout-callback",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "f27bd4b7-2dec-4831-92dc-7f7873be4bb8",
          "name": "atv: 2",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "claim.value": "2",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "lightweight.claim": "false",
            "access.token.claim": "true",
            "claim.name": "atv",
            "jsonType.label": "String",
            "access.tokenResponse.claim": "false"
          }
        },
        {
          "id": "6d5b8f45-b49c-4575-9e9d-a87839a9d1cc",
          "name": "testmapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-script-based-protocol-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "false",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "lightweight.claim": "false",
            "access.token.claim": "true",
            "claim.name": "scope",
            "jsonType.label": "String",
            "script": "/**\n * Available variables: \n * user - the current user\n * realm - the current realm\n * token - the current token\n * userSession - the current userSession\n * keycloakSession - the current keycloakSession\n */\n\n\n//insert your code here...\n\n\nvar ArrayList = Java.type(\"java.util.ArrayList\");\nvar claimValues = new ArrayList();\nvar client = keycloakSession.getContext().getClient();\nvar forEach = Array.prototype.forEach;\n\nforEach.call(user.getClientRoleMappingsStream(client).toArray(), function(roleModel) {\n  \n  forEach.call(roleModel.getCompositesStream().toArray(), function (role) {\n    claimValues.add(role.getName());\n  });\n\n});\n\n// convert ArrayList -> Java String (space-delimited)\nvar claimString = Java.type(\"java.lang.String\").join(\" \", claimValues);\n\n\ntoken.getOtherClaims().put(\"scope\", claimString);\n\n"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e8386028-a38d-4597-9818-e0ea58c44627",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/master/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/master/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "4b34b8d3-c535-4c49-a775-749761b253af",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "organization",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "b64eb84c-a909-4dca-af5d-81bacda1a02f",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "495e17e7-5db1-45a3-a375-7d42390f937a",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "dd2b76f7-16ea-4131-bd06-4770382eeb4b",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "69db9cfb-7d93-4aff-a945-6659833de35a",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "0986702b-d552-47dd-8e78-f9a1ce55fe7d",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        }
      ]
    },
    {
      "id": "d09e9ff4-4471-49c2-8612-a39894050731",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "3e610c40-962b-4cd2-8f7e-2f2a299c9a76",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7d7d27c4-94b3-4293-bf61-323d962974a0",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a230989e-eb2f-4e31-af73-8b6a6268230d",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dd39f65c-18b3-49e1-ad39-b6cf9ab8047b",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "ed50f4d8-5154-4b06-8f04-d66047d78ca7",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "90789c63-e736-4c69-b784-07fc1dae8311",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "caf37902-626d-47c5-84a8-cd02a4419241",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6532ddee-96f1-46e0-9640-b3aecee0e91c",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c61fc0f6-6702-47da-bb23-5fec456e10ae",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6913161a-d55b-45a1-8850-955a4e8f6d0e",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "3c288001-1597-4a2f-bb57-bb62557d2a9a",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "77a01236-e91c-4832-bc56-0326c42ec95c",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "31d8904a-85b9-44c9-8dcf-1467cad0e8e7",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "466653b7-6820-4527-baa0-e2eafa98106c",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "0469116c-9045-446b-b0f4-ed02bc96fab8",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "0a239ff9-f6c6-486a-b715-35961926b791",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "74a29804-c745-4e88-a621-6c2ee738d8a6",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "ea7f4563-58d1-46ee-a555-623ac327fdbe",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7ce7fc67-a3da-4689-8189-bd30fd53f19e",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "5f625fd7-567e-4348-a1f0-41895048fdcc",
      "name": "organization",
      "description": "Additional claims about the organization a subject belongs to",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${organizationScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "4694b3a6-3529-4f8d-a9dc-13f7d4550604",
          "name": "organization",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-membership-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organization",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "01db3c32-c566-4e29-9095-9a835419f802",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "8faece22-23a2-491f-ac23-668e4aea181b",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9ca5ad7b-feee-4403-b83d-680bc992eb21",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "aab5bb4f-22dc-4b12-a059-da7bda3ea796",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "270174ef-5516-4713-b7f5-ba49136eadfe",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "631a73a0-6846-4572-93d7-60b37ca3bcfe",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "id": "efd581ec-2ee7-4f0c-aa3b-55fbd1d4bce1",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "142af3f8-5a46-47c3-8899-26a6572391e0",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "d45c18d2-8e61-440b-b020-04e25f3626e0",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "b03754e6-8d19-4566-8427-53d63024c57d",
      "name": "saml_organization",
      "description": "Organization Membership",
      "protocol": "saml",
      "attributes": {
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "b97985c4-de36-4b09-928a-4d3dc45cebcc",
          "name": "organization",
          "protocol": "saml",
          "protocolMapper": "saml-organization-membership-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "bac46772-12ac-4c0b-8a82-c75c1bed6e9c",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "37ab5559-49c3-44c8-bd9e-694d551d4e60",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "b2824c9f-1663-4693-ac2d-203d185bb98c",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "29857107-3123-4de6-9bf6-9a9a619bf657",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "25dd0fdd-b6f3-428b-a5e2-48de1506ac81",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "6e87bce7-3aaf-4980-bf83-035ac241c4da",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "saml_organization",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt",
    "organization"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "85aac49e-512b-4ccb-b139-de4f9bdd5416",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "9c0f11f0-fbd8-433c-9b89-add33b55e177",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "fd7575ae-0e12-459c-8db9-88cfb2b495e2",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "cb2f5720-b7ad-4318-be7a-9f72e26472c9",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "52e6330f-4ed3-4ecc-a992-90c47e4373ca",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "4969af14-7145-42e4-9ae8-02aecac006b9",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper"
          ]
        }
      },
      {
        "id": "f3ad562b-4f52-4622-a5d8-bb0fa0ef1550",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      },
      {
        "id": "84362132-5ac5-4f38-aa5e-9dddd2be8fc1",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "80e61f9c-1468-4ac2-aad4-82dc82a2e67f",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {
          "kc.user.profile.config": [
            "{\"attributes\":[{\"name\":\"username\",\"displayName\":\"${username}\",\"validations\":{\"length\":{\"min\":3,\"max\":255},\"username-prohibited-characters\":{},\"up-username-not-idn-homograph\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"email\",\"displayName\":\"${email}\",\"validations\":{\"email\":{},\"length\":{\"max\":255}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"firstName\",\"displayName\":\"${firstName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false},{\"name\":\"lastName\",\"displayName\":\"${lastName}\",\"validations\":{\"length\":{\"max\":255},\"person-name-prohibited-characters\":{}},\"permissions\":{\"view\":[\"admin\",\"user\"],\"edit\":[\"admin\",\"user\"]},\"multivalued\":false}],\"groups\":[{\"name\":\"user-metadata\",\"displayHeader\":\"User metadata\",\"displayDescription\":\"Attributes, which refer to user metadata\"}]}"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "f634d816-abbb-4fa8-8212-6b234042612c",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["fb0a2c22-e795-4e22-a2be-7c051b6b761c"],
          "secret": ["qruOfvKQw7RCI14_fmESHg"],
          "priority": ["100"]
        }
      },
      {
        "id": "f2095ad0-e7bc-47e6-904d-32753f3a1dbb",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEogIBAAKCAQEAke9Z/Du+BSs1NX1cFnpjibBBOKsnkcRu/mhmiKvl7ruaRuzl8ElX09kEkpBAXMXLr4op3VC1BjA4hDKsz+nUkk/sOxC2mXuj08pXB2Ep6NqDI/TB0c2qDymw62C+f3/jLTdhXoJVv2XYouvylLNMILNzEO/Ye9HBXfNT70SV/8gld2UX1g/3dNN3NNl5r9nYnpLJIH8SK5hQtZM1jZYk8CN++wklAxdgvWXpmUGtcKWKnanTED4orNqdq6EQ99MvCUdiCL/Xx/QNfeeGSTM/oAqEV8OuOkUW+RPnyp697jXxJJlFT2DtG4wFfAtg9+5QNLQFkkB5MRfVXdHmM9h+6wIDAQABAoIBAA7iNm8/OJYWXgriii3Qta4pR72b1yFKw3c29p4hygWbJJTvPFRRZp+4lnrMM4RCuA9jK/nibVQAPwNcl7tswb1aYWF0xurIbWEAVffutPOGtbFJGStoqlt5iQ24hDVEucq2xzt4V355yKp1HfyEfNMo+idUDuQx9GK8mmbgu9umSph+GXX1l6kfpp/WcA+EhrSV+8N9J1plRoDKr1al2ueb0X+imjcLSBTR55qpmRJft2Ocfg3px1IR2LpBTYU8K+nOUZIVh8qAxVPMsG0DpfkkmBwi/mZnkQf3rUBnQGwP5myF90LepkzpvJlTVdp9jHgJcnsn4p0q+fJINKcs2eECgYEAyD0bfmRMaxDXG+M1CL2eFaODvcYHSMdfM7xd27Xmkj68vf1gLVaQ7NlAdIR3x9mxOfY/GTHJ8hnR5I0J4Iv8UUvLQg+fzWc0a6yE6K8H6+ct4EUIsw4h7qNR4XGmyKxp61HAq4yp1Pduj/ooCYaSL44XKWFlu5PppW8vdxzCvTcCgYEAupL28ulzXKQM6YJ5FsnrPuDVu8kLXT+VdZka/sooivoRYM0XWuKzhwmayyioqYki0iKYeDTduM00vPIVltDjO0VKDURhsTaYubIOCigvMiQBNUfFwuTSv5AZwz38XohpHMmjmeG98Y0OimDzw/4s0/1AYhDl20t2iEgFmKGsxe0CgYBbwiTnNm8OYRkx3lxfNQVMRTIJtMWBxFsMCjW4iRKv0bAMICACprii0KuIuWtqWYetV/pyQS6ZkttsMHVmQL/PQTxTeXVxWunaraP6PLsUj0umifwCkWdbQ9wxwzL6ooenHj98XWk1/mzb7XaLZu92e1aBz/AelRlshhbqLnPO4QKBgEps28PUqmc3Lctsd59GlufzSm9paHYfKiDKHYGr5PZjgNErnvhrXJAunagTJQzUHqbSlB3HgPb6LOJ+c2xBEZQQNNUMBShrDgttYrpcg08uG6lEYzg2jXdLJWvD60tOgRexu+hjq6CS000SFcuGNh2udaNo+Dg9ZyBAErNrMv+VAoGAKOJEzl/3R/Y/5zx7LR57AZr7Jx/GgdD9SHWzO8lpmuL4OTpILtwEpjl5ZU3g1ElP8Wsv1m7SNwwjXgqWuDpcJmucBZicEhTzQ3/Md6ye/tJNXRUyjFivBQ7dRvUXBvWrcIRaH5GxjexV3KsZb6soEbLUAISLXNZElAhUOCo/vSY="
          ],
          "certificate": [
            "MIICmzCCAYMCBgGZuSrHfjANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjUxMDA2MTA1NTEyWhcNMzUxMDA2MTA1NjUyWjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCR71n8O74FKzU1fVwWemOJsEE4qyeRxG7+aGaIq+Xuu5pG7OXwSVfT2QSSkEBcxcuviindULUGMDiEMqzP6dSST+w7ELaZe6PTylcHYSno2oMj9MHRzaoPKbDrYL5/f+MtN2FeglW/Zdii6/KUs0wgs3MQ79h70cFd81PvRJX/yCV3ZRfWD/d003c02Xmv2diekskgfxIrmFC1kzWNliTwI377CSUDF2C9ZemZQa1wpYqdqdMQPiis2p2roRD30y8JR2IIv9fH9A1954ZJMz+gCoRXw646RRb5E+fKnr3uNfEkmUVPYO0bjAV8C2D37lA0tAWSQHkxF9Vd0eYz2H7rAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAES5hQl8kaQkPBF4olb3vewRCEf+FbibR07etjOQbrEL5XRC9qtU7Zcbt4kAqSXuGVol7wYKAvXtHdZLFR3nYTDSZcP6ke8bE/C+tpkF1wpd6/KmR2emFcUSGFIgkWO/fbnB6MDPyzFVruLkMJEIou/JtkKEweg0vJ7SBP5m343abZrQnohnvpkHZrxB0e608DtU4bNaIQw37v9ZEUEG3yJQ9gLihoc19PgnRWk0KUYzQQfixGCFAFq3ky9elNRBqnzyuBi5AeJHz/DpxXswkV/0erb5Yob06Z5NmAZ+WxwfJVZlFq2JjVY1cg6Pd1oOHl5M53lD5OUqioc6Q/+UUpQ="
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      },
      {
        "id": "23aef425-6622-467c-ba4f-294e97a314a4",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["bdb2168f-3cb3-434f-a34a-609a0e86d648"],
          "secret": [
            "4Q5OufBz_rYS1G8qSYvw-lO-gNNDefb9SAogM2Ffm-KoXq__5v8EVPFTXrb_8qUZ47xZ_cABRdhHPvCXTRTMhyQ4-cQng_VjODhqfuECKLuuUiPb1iQk_5Up4n3jnSrq-A6sNezbdJYLHVYcCfMvRqyT-9ZJDmceEDZ52KmJK6g"
          ],
          "priority": ["100"],
          "algorithm": ["HS512"]
        }
      },
      {
        "id": "352774f1-df54-44ec-ab7f-924f44cae652",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAvBUIIED8o0Oi1vnc5hYdwnZcIIfxqTtZVi8GkhDU0BpY/iJaBRRLaRV4cB4UtrxpUSSy6pRiFsx5Zv+aJnMf41yoHUj3IA0MpG9IQPHrI5lofub7mnB5A2BVz+4od9tPUZEs8Z6tb6Bkjg1sv642E/KCFq3od55qg+Ngj0prlsOgSEfflgU1beTuPtn+GRV00Jhgwxn1is+1kh7rYEIFf7NQClj590yidgcdUwQOHvB1BR06DngpoPQ+U/SfB0EmddZdNobgGY8W4O3CwWGzb7S+mo3TSBkTjcyFMMG3izKuPUYVM+OPNgAPy409hfUzhh8grqW6hXeWKg904/W8vQIDAQABAoIBACwEOgoeW2G0HwRzplxcmatcetQMLKS/5Hj0eXOup7dqKyCSloGwzbMymKSYjZ10e6tHTO30Ov597P2LXR6Ze8GAekGcRWWFWEuVVZIJa8/Bg8CLOx/aKZ/+KCcI5ASk2SvML3n+ejVxEodiIey8DyDc9M/s9EYmV2Q1TvBJ6OL3zuIVRam8ZtJX68FRZME8e0p5B5J7mm8sYpBeNTpf/w9WZqbcAE38Qq1MsSZ2OFwA1drUoL/ujYa8t3YmX9l70gVt2WPWyGOk2xv3DmkDFmtQ5xLt9dvaQcqH8j69QoWR4Ma65tptruK3e1g0TTanLWOC+9xVb+VIdbeEw4kUHjsCgYEA+NzbnMXZ4IQw0y7mxD6wbB/9jzHhrvfQZ98zZW2rk8NEYyPEPzWFSIxhiNSZ6IQ5u3IROmMQtc7m4O1WVKyCNLXha/7txGOGU1ERZevgiPC0TuTc5rOUlOaOtz8dFBJ7CMxoNg/H4E2Mi7Yj81BFojsU+IGrXuCqcehCV/BL8DMCgYEAwXnsxSdpo3+6Q1nFvdG6YAsoNVRxzZE9SDHo6vX7BqpS98uwZG5DfRraubQ+4vHUbdo1sRhZrtXg9pGxRs9bA7jU9O2FIAsr6UMHYLJlE3SjtfC+Y5lqGosjUcRrH/14ykJ6pmCc4kjx3d7SD7dpNrt5IUTEJDNWaMypzVid708CgYBAwFZz6BbUkBCUIjPxA86rk3dJ9tSdzeTv4edhkLN/8uKsWPYK7EYNplkKXSbelOjgmMFay8PhSkBQbfB0f54xUNGiY+ZBnxOoQgOg3UrC1r5TeMDxVfBm/cZMb6OFQXm5xFWpG1oKRqM3BuE7wbschvrh3ftU6Gfw01nPv7pCeQKBgQCGzs2LEcspgPXnt8VwXZHfGecKQayJ74kjpKMGFB60pjjpL6PYVnvvz6ZXfp/SwW2inUiL/MuAZsY5B4reK9ze2wqHHniDu0T9Yxbg6WxEAiGPxA7klyC3HfueHZ4GzDY9t9R92RN3GBxu27LCAKnu2PGtnJyOHLc4jmJCElz5QQKBgAu/HJE7M9yCiXqGyJEoAWhTVmbIjnD5FMooxauSyKy/JjJlwj/CvMqoQAtmuVfJmHB7DBgr+LAgaD1OfM9E2JysqK4HidheBWHdLf9/2HB0Ahg6o4Y5wLXeZQrT8odyKJUNbZlLqZqdhnMSUNLZd20rszWPYzhEG73kuvj9rPf4"
          ],
          "certificate": [
            "MIICmzCCAYMCBgGZuSrInzANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZtYXN0ZXIwHhcNMjUxMDA2MTA1NTEyWhcNMzUxMDA2MTA1NjUyWjARMQ8wDQYDVQQDDAZtYXN0ZXIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC8FQggQPyjQ6LW+dzmFh3Cdlwgh/GpO1lWLwaSENTQGlj+IloFFEtpFXhwHhS2vGlRJLLqlGIWzHlm/5omcx/jXKgdSPcgDQykb0hA8esjmWh+5vuacHkDYFXP7ih3209RkSzxnq1voGSODWy/rjYT8oIWreh3nmqD42CPSmuWw6BIR9+WBTVt5O4+2f4ZFXTQmGDDGfWKz7WSHutgQgV/s1AKWPn3TKJ2Bx1TBA4e8HUFHToOeCmg9D5T9J8HQSZ11l02huAZjxbg7cLBYbNvtL6ajdNIGRONzIUwwbeLMq49RhUz4482AA/LjT2F9TOGHyCupbqFd5YqD3Tj9by9AgMBAAEwDQYJKoZIhvcNAQELBQADggEBABAtxISowaayRhNL1RRm+FQ8TcNWBYXfbx92jc5CkQFXvL+v1Q4VQzElaqDo89h3ZbZ2eOersssZBp1bzY1ysBxW676AqHW/K+lB2LOpHXqYZ7EJB+yG2Czq36RXOc4XPkyTFNpkm3f5X1H+gmWfojzOhkfqQ1QaRP6Fo/rI10Qygr4U/CzJm0fuStgrLKqfuzaaZ+NTyTkZh78NERC9obzQHpGHJ3wPuScdTUPSz4xBsaTfbK6ZXJlI1x02Z6ysD0AXW3klbhpgV9Xdy6jfnYQrIMb7Wh11gdCORQXhBvai18RvM5xYJtSXFXRTgsnq5ecX8RFNVzsbO03DDC0QfsU="
          ],
          "priority": ["100"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "4c2e1408-b480-490d-b76c-c09841f26af0",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8f7096b8-6bdd-4242-9bdc-56245b94b77d",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4ac2b3e0-6455-4d34-a805-3661fab2d5a6",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1e260bf9-15a0-4601-8b02-053c777af6bb",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8c2ea186-e354-48b5-867f-aa7a98d99653",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b61e01d4-657d-4a8d-b9ae-a8a9617a2ad5",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "49313345-75d7-4c20-9093-072de852f5a4",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "362350a6-4515-43f0-b4e5-be42912e7472",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "acee858b-c831-4bea-b827-d381d68cc738",
      "alias": "browser",
      "description": "Browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e74f32bd-9eb4-4489-bbd1-401be2a9ac78",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ee9090e2-a978-440a-95ad-90fb80cb6f92",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a360432a-4e4e-45da-9711-f62dd34fa927",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1d19b8ca-b914-4985-b993-f1275225ff6b",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b9a40026-5dc7-4e90-9ed1-b6b56dfdd885",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2e9bc6f8-8b70-4c03-9f7b-f1a951efa1c1",
      "alias": "registration",
      "description": "Registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "30b54e45-8008-49a1-a82c-c92e9c3758fb",
      "alias": "registration form",
      "description": "Registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1f1bdd0c-8b54-4f5f-a29d-42dcc1bb6952",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d718fe53-d8a1-4f13-8c72-6ed56984d317",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "80f2591a-51ee-4512-9ec0-db3a70a91fb3",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "1a999041-320a-48df-9a06-20ce5a6c1210",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "organizationsEnabled": "false"
  },
  "keycloakVersion": "26.0.6",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
