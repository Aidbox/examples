// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import { Address } from './Address';
import { Attachment } from './Attachment';
import { BackboneElement } from './BackboneElement';
import { CodeableConcept } from './CodeableConcept';
import { DomainResource } from './DomainResource';
import { Identifier } from './Identifier';
import { Money } from './Money';
import { Period } from './Period';
import { Quantity } from './Quantity';
import { Reference } from './Reference';


export interface ClaimResponseAddItem extends BackboneElement {
    adjudication: ClaimResponseItemAdjudication[];
    bodySite?: CodeableConcept;
    detail?: ClaimResponseAddItemDetail[];
    detailSequence?: number[];
    factor?: number;
    itemSequence?: number[];
    locationAddress?: Address;
    locationCodeableConcept?: CodeableConcept;
    locationReference?: Reference<'Location'>;
    modifier?: CodeableConcept[];
    net?: Money;
    noteNumber?: number[];
    productOrService: CodeableConcept;
    programCode?: CodeableConcept[];
    provider?: Reference<'Organization' | 'Practitioner' | 'PractitionerRole'>[];
    quantity?: Quantity;
    servicedDate?: string;
    servicedPeriod?: Period;
    subdetailSequence?: number[];
    subSite?: CodeableConcept[];
    unitPrice?: Money;
}

export interface ClaimResponseAddItemDetail extends BackboneElement {
    adjudication: ClaimResponseItemAdjudication[];
    factor?: number;
    modifier?: CodeableConcept[];
    net?: Money;
    noteNumber?: number[];
    productOrService: CodeableConcept;
    quantity?: Quantity;
    subDetail?: ClaimResponseAddItemDetailSubDetail[];
    unitPrice?: Money;
}

export interface ClaimResponseAddItemDetailSubDetail extends BackboneElement {
    adjudication: ClaimResponseItemAdjudication[];
    factor?: number;
    modifier?: CodeableConcept[];
    net?: Money;
    noteNumber?: number[];
    productOrService: CodeableConcept;
    quantity?: Quantity;
    unitPrice?: Money;
}

export interface ClaimResponseError extends BackboneElement {
    code: CodeableConcept;
    detailSequence?: number;
    itemSequence?: number;
    subDetailSequence?: number;
}

export interface ClaimResponseInsurance extends BackboneElement {
    businessArrangement?: string;
    claimResponse?: Reference<'ClaimResponse'>;
    coverage: Reference<'Coverage'>;
    focal: boolean;
    sequence: number;
}

export interface ClaimResponseItem extends BackboneElement {
    adjudication: ClaimResponseItemAdjudication[];
    detail?: ClaimResponseItemDetail[];
    itemSequence: number;
    noteNumber?: number[];
}

export interface ClaimResponseItemAdjudication extends BackboneElement {
    amount?: Money;
    category: CodeableConcept;
    reason?: CodeableConcept;
    value?: number;
}

export interface ClaimResponseItemDetail extends BackboneElement {
    adjudication: ClaimResponseItemAdjudication[];
    detailSequence: number;
    noteNumber?: number[];
    subDetail?: ClaimResponseItemDetailSubDetail[];
}

export interface ClaimResponseItemDetailSubDetail extends BackboneElement {
    adjudication?: ClaimResponseItemAdjudication[];
    noteNumber?: number[];
    subDetailSequence: number;
}

export interface ClaimResponsePayment extends BackboneElement {
    adjustment?: Money;
    adjustmentReason?: CodeableConcept;
    amount: Money;
    date?: string;
    identifier?: Identifier;
    type: CodeableConcept;
}

export interface ClaimResponseProcessNote extends BackboneElement {
    language?: CodeableConcept;
    number?: number;
    text: string;
    type?: 'display' | 'print' | 'printoper';
}

export interface ClaimResponseTotal extends BackboneElement {
    amount: Money;
    category: CodeableConcept;
}

export interface ClaimResponse extends DomainResource {
    addItem?: ClaimResponseAddItem[];
    adjudication?: ClaimResponseItemAdjudication[];
    communicationRequest?: Reference<'CommunicationRequest'>[];
    created: string;
    _created?: Element;
    disposition?: string;
    _disposition?: Element;
    error?: ClaimResponseError[];
    form?: Attachment;
    formCode?: CodeableConcept;
    fundsReserve?: CodeableConcept;
    identifier?: Identifier[];
    insurance?: ClaimResponseInsurance[];
    insurer: Reference<'Organization'>;
    item?: ClaimResponseItem[];
    outcome: 'queued' | 'complete' | 'error' | 'partial';
    _outcome?: Element;
    patient: Reference<'Patient'>;
    payeeType?: CodeableConcept;
    payment?: ClaimResponsePayment;
    preAuthPeriod?: Period;
    preAuthRef?: string;
    _preAuthRef?: Element;
    processNote?: ClaimResponseProcessNote[];
    request?: Reference<'Claim'>;
    requestor?: Reference<'Organization' | 'Practitioner' | 'PractitionerRole'>;
    status: 'active' | 'cancelled' | 'draft' | 'entered-in-error';
    _status?: Element;
    subType?: CodeableConcept;
    total?: ClaimResponseTotal[];
    type: CodeableConcept;
    use: 'claim' | 'preauthorization' | 'predetermination';
    _use?: Element;
}

