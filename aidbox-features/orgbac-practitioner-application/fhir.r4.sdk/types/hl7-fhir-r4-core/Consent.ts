// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import { Attachment } from './Attachment';
import { BackboneElement } from './BackboneElement';
import { CodeableConcept } from './CodeableConcept';
import { Coding } from './Coding';
import { DomainResource } from './DomainResource';
import { Identifier } from './Identifier';
import { Period } from './Period';
import { Reference } from './Reference';


export interface ConsentPolicy extends BackboneElement {
    authority?: string;
    uri?: string;
}

export interface ConsentProvision extends BackboneElement {
    action?: CodeableConcept[];
    actor?: ConsentProvisionActor[];
    class?: Coding[];
    code?: CodeableConcept[];
    data?: ConsentProvisionData[];
    dataPeriod?: Period;
    period?: Period;
    provision?: ConsentProvision[];
    purpose?: Coding[];
    securityLabel?: Coding[];
    type?: 'deny' | 'permit';
}

export interface ConsentProvisionActor extends BackboneElement {
    reference: Reference<'CareTeam' | 'Device' | 'Group' | 'Organization' | 'Patient' | 'Practitioner' | 'PractitionerRole' | 'RelatedPerson'>;
    role: CodeableConcept;
}

export interface ConsentProvisionData extends BackboneElement {
    meaning: 'instance' | 'related' | 'dependents' | 'authoredby';
    reference: Reference<'Resource'>;
}

export interface ConsentVerification extends BackboneElement {
    verificationDate?: string;
    verified: boolean;
    verifiedWith?: Reference<'Patient' | 'RelatedPerson'>;
}

export interface Consent extends DomainResource {
    category: CodeableConcept[];
    dateTime?: string;
    _dateTime?: Element;
    identifier?: Identifier[];
    organization?: Reference<'Organization'>[];
    patient?: Reference<'Patient'>;
    performer?: Reference<'Organization' | 'Patient' | 'Practitioner' | 'PractitionerRole' | 'RelatedPerson'>[];
    policy?: ConsentPolicy[];
    policyRule?: CodeableConcept;
    provision?: ConsentProvision;
    scope: CodeableConcept;
    sourceAttachment?: Attachment;
    sourceReference?: Reference<'Consent' | 'Contract' | 'DocumentReference' | 'QuestionnaireResponse'>;
    status: 'draft' | 'proposed' | 'active' | 'rejected' | 'inactive' | 'entered-in-error';
    _status?: Element;
    verification?: ConsentVerification[];
}

