// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import { Age } from './Age';
import { Annotation } from './Annotation';
import { BackboneElement } from './BackboneElement';
import { CodeableConcept } from './CodeableConcept';
import { DomainResource } from './DomainResource';
import { Duration } from './Duration';
import { Expression } from './Expression';
import { Identifier } from './Identifier';
import { Period } from './Period';
import { Range } from './Range';
import { Reference } from './Reference';
import { RelatedArtifact } from './RelatedArtifact';
import { Timing } from './Timing';


export interface RequestGroupAction extends BackboneElement {
    action?: RequestGroupAction[];
    cardinalityBehavior?: 'single' | 'multiple';
    code?: CodeableConcept[];
    condition?: RequestGroupActionCondition[];
    description?: string;
    documentation?: RelatedArtifact[];
    groupingBehavior?: 'visual-group' | 'logical-group' | 'sentence-group';
    participant?: Reference<'Device' | 'Patient' | 'Practitioner' | 'PractitionerRole' | 'RelatedPerson'>[];
    precheckBehavior?: 'yes' | 'no';
    prefix?: string;
    priority?: 'routine' | 'urgent' | 'asap' | 'stat';
    relatedAction?: RequestGroupActionRelatedAction[];
    requiredBehavior?: 'must' | 'could' | 'must-unless-documented';
    resource?: Reference<'Resource'>;
    selectionBehavior?: 'any' | 'all' | 'all-or-none' | 'exactly-one' | 'at-most-one' | 'one-or-more';
    textEquivalent?: string;
    timingAge?: Age;
    timingDateTime?: string;
    timingDuration?: Duration;
    timingPeriod?: Period;
    timingRange?: Range;
    timingTiming?: Timing;
    title?: string;
    type?: CodeableConcept;
}

export interface RequestGroupActionCondition extends BackboneElement {
    expression?: Expression;
    kind: 'applicability' | 'start' | 'stop';
}

export interface RequestGroupActionRelatedAction extends BackboneElement {
    actionId: string;
    offsetDuration?: Duration;
    offsetRange?: Range;
    relationship: 'before-start' | 'before' | 'before-end' | 'concurrent-with-start' | 'concurrent' | 'concurrent-with-end' | 'after-start' | 'after' | 'after-end';
}

export interface RequestGroup extends DomainResource {
    action?: RequestGroupAction[];
    author?: Reference<'Device' | 'Practitioner' | 'PractitionerRole'>;
    authoredOn?: string;
    _authoredOn?: Element;
    basedOn?: Reference<'Resource'>[];
    code?: CodeableConcept;
    encounter?: Reference<'Encounter'>;
    groupIdentifier?: Identifier;
    identifier?: Identifier[];
    instantiatesCanonical?: string[];
    _instantiatesCanonical?: Element;
    instantiatesUri?: string[];
    _instantiatesUri?: Element;
    intent: 'proposal' | 'plan' | 'directive' | 'order' | 'option' | 'original-order' | 'reflex-order' | 'filler-order' | 'instance-order';
    _intent?: Element;
    note?: Annotation[];
    priority?: 'routine' | 'urgent' | 'asap' | 'stat';
    _priority?: Element;
    reasonCode?: CodeableConcept[];
    reasonReference?: Reference<'Condition' | 'DiagnosticReport' | 'DocumentReference' | 'Observation'>[];
    replaces?: Reference<'Resource'>[];
    status: 'draft' | 'active' | 'on-hold' | 'revoked' | 'completed' | 'entered-in-error' | 'unknown';
    _status?: Element;
    subject?: Reference<'Group' | 'Patient'>;
}

