// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import { BackboneElement } from './BackboneElement';
import { CodeableConcept } from './CodeableConcept';
import { DomainResource } from './DomainResource';
import { Identifier } from './Identifier';
import { Money } from './Money';
import { Period } from './Period';
import { Quantity } from './Quantity';
import { Reference } from './Reference';


export interface CoverageEligibilityRequestInsurance extends BackboneElement {
    businessArrangement?: string;
    coverage: Reference<'Coverage'>;
    focal?: boolean;
}

export interface CoverageEligibilityRequestItem extends BackboneElement {
    category?: CodeableConcept;
    detail?: Reference<'Resource'>[];
    diagnosis?: CoverageEligibilityRequestItemDiagnosis[];
    facility?: Reference<'Location' | 'Organization'>;
    modifier?: CodeableConcept[];
    productOrService?: CodeableConcept;
    provider?: Reference<'Practitioner' | 'PractitionerRole'>;
    quantity?: Quantity;
    supportingInfoSequence?: number[];
    unitPrice?: Money;
}

export interface CoverageEligibilityRequestItemDiagnosis extends BackboneElement {
    diagnosisCodeableConcept?: CodeableConcept;
    diagnosisReference?: Reference<'Condition'>;
}

export interface CoverageEligibilityRequestSupportingInfo extends BackboneElement {
    appliesToAll?: boolean;
    information: Reference<'Resource'>;
    sequence: number;
}

export interface CoverageEligibilityRequest extends DomainResource {
    created: string;
    _created?: Element;
    enterer?: Reference<'Practitioner' | 'PractitionerRole'>;
    facility?: Reference<'Location'>;
    identifier?: Identifier[];
    insurance?: CoverageEligibilityRequestInsurance[];
    insurer: Reference<'Organization'>;
    item?: CoverageEligibilityRequestItem[];
    patient: Reference<'Patient'>;
    priority?: CodeableConcept;
    provider?: Reference<'Organization' | 'Practitioner' | 'PractitionerRole'>;
    purpose: 'auth-requirements' | 'benefits' | 'discovery' | 'validation'[];
    _purpose?: Element;
    servicedDate?: string;
    _servicedDate?: Element;
    servicedPeriod?: Period;
    status: 'active' | 'cancelled' | 'draft' | 'entered-in-error';
    _status?: Element;
    supportingInfo?: CoverageEligibilityRequestSupportingInfo[];
}

