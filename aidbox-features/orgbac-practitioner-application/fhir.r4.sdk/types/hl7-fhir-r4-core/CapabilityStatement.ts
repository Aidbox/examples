// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import { BackboneElement } from './BackboneElement';
import { CodeableConcept } from './CodeableConcept';
import { Coding } from './Coding';
import { ContactDetail } from './ContactDetail';
import { DomainResource } from './DomainResource';
import { Reference } from './Reference';
import { UsageContext } from './UsageContext';


export interface CapabilityStatementDocument extends BackboneElement {
    documentation?: string;
    mode: 'producer' | 'consumer';
    profile: string;
}

export interface CapabilityStatementImplementation extends BackboneElement {
    custodian?: Reference<'Organization'>;
    description: string;
    url?: string;
}

export interface CapabilityStatementMessaging extends BackboneElement {
    documentation?: string;
    endpoint?: CapabilityStatementMessagingEndpoint[];
    reliableCache?: number;
    supportedMessage?: CapabilityStatementMessagingSupportedMessage[];
}

export interface CapabilityStatementMessagingEndpoint extends BackboneElement {
    address: string;
    protocol: Coding;
}

export interface CapabilityStatementMessagingSupportedMessage extends BackboneElement {
    definition: string;
    mode: 'sender' | 'receiver';
}

export interface CapabilityStatementRest extends BackboneElement {
    compartment?: string[];
    documentation?: string;
    interaction?: CapabilityStatementRestInteraction[];
    mode: 'client' | 'server';
    operation?: CapabilityStatementRestResourceOperation[];
    resource?: CapabilityStatementRestResource[];
    searchParam?: CapabilityStatementRestResourceSearchParam[];
    security?: CapabilityStatementRestSecurity;
}

export interface CapabilityStatementRestInteraction extends BackboneElement {
    code: 'transaction' | 'batch' | 'search-system' | 'history-system';
    documentation?: string;
}

export interface CapabilityStatementRestResource extends BackboneElement {
    conditionalCreate?: boolean;
    conditionalDelete?: 'not-supported' | 'single' | 'multiple';
    conditionalRead?: 'not-supported' | 'modified-since' | 'not-match' | 'full-support';
    conditionalUpdate?: boolean;
    documentation?: string;
    interaction?: CapabilityStatementRestResourceInteraction[];
    operation?: CapabilityStatementRestResourceOperation[];
    profile?: string;
    readHistory?: boolean;
    referencePolicy?: 'literal' | 'logical' | 'resolves' | 'enforced' | 'local'[];
    searchInclude?: string[];
    searchParam?: CapabilityStatementRestResourceSearchParam[];
    searchRevInclude?: string[];
    supportedProfile?: string[];
    type: 'Account' | 'ActivityDefinition' | 'AdverseEvent' | 'AllergyIntolerance' | 'Appointment' | 'AppointmentResponse' | 'AuditEvent' | 'Basic' | 'Binary' | 'BiologicallyDerivedProduct' | 'BodyStructure' | 'Bundle' | 'CapabilityStatement' | 'CarePlan' | 'CareTeam' | 'CatalogEntry' | 'ChargeItem' | 'ChargeItemDefinition' | 'Claim' | 'ClaimResponse' | 'ClinicalImpression' | 'CodeSystem' | 'Communication' | 'CommunicationRequest' | 'CompartmentDefinition' | 'Composition' | 'ConceptMap' | 'Condition' | 'Consent' | 'Contract' | 'Coverage' | 'CoverageEligibilityRequest' | 'CoverageEligibilityResponse' | 'DetectedIssue' | 'Device' | 'DeviceDefinition' | 'DeviceMetric' | 'DeviceRequest' | 'DeviceUseStatement' | 'DiagnosticReport' | 'DocumentManifest' | 'DocumentReference' | 'DomainResource' | 'EffectEvidenceSynthesis' | 'Encounter' | 'Endpoint' | 'EnrollmentRequest' | 'EnrollmentResponse' | 'EpisodeOfCare' | 'EventDefinition' | 'Evidence' | 'EvidenceVariable' | 'ExampleScenario' | 'ExplanationOfBenefit' | 'FamilyMemberHistory' | 'Flag' | 'Goal' | 'GraphDefinition' | 'Group' | 'GuidanceResponse' | 'HealthcareService' | 'ImagingStudy' | 'Immunization' | 'ImmunizationEvaluation' | 'ImmunizationRecommendation' | 'ImplementationGuide' | 'InsurancePlan' | 'Invoice' | 'Library' | 'Linkage' | 'List' | 'Location' | 'Measure' | 'MeasureReport' | 'Media' | 'Medication' | 'MedicationAdministration' | 'MedicationDispense' | 'MedicationKnowledge' | 'MedicationRequest' | 'MedicationStatement' | 'MedicinalProduct' | 'MedicinalProductAuthorization' | 'MedicinalProductContraindication' | 'MedicinalProductIndication' | 'MedicinalProductIngredient' | 'MedicinalProductInteraction' | 'MedicinalProductManufactured' | 'MedicinalProductPackaged' | 'MedicinalProductPharmaceutical' | 'MedicinalProductUndesirableEffect' | 'MessageDefinition' | 'MessageHeader' | 'MolecularSequence' | 'NamingSystem' | 'NutritionOrder' | 'Observation' | 'ObservationDefinition' | 'OperationDefinition' | 'OperationOutcome' | 'Organization' | 'OrganizationAffiliation' | 'Parameters' | 'Patient' | 'PaymentNotice' | 'PaymentReconciliation' | 'Person' | 'PlanDefinition' | 'Practitioner' | 'PractitionerRole' | 'Procedure' | 'Provenance' | 'Questionnaire' | 'QuestionnaireResponse' | 'RelatedPerson' | 'RequestGroup' | 'ResearchDefinition' | 'ResearchElementDefinition' | 'ResearchStudy' | 'ResearchSubject' | 'Resource' | 'RiskAssessment' | 'RiskEvidenceSynthesis' | 'Schedule' | 'SearchParameter' | 'ServiceRequest' | 'Slot' | 'Specimen' | 'SpecimenDefinition' | 'StructureDefinition' | 'StructureMap' | 'Subscription' | 'Substance' | 'SubstanceNucleicAcid' | 'SubstancePolymer' | 'SubstanceProtein' | 'SubstanceReferenceInformation' | 'SubstanceSourceMaterial' | 'SubstanceSpecification' | 'SupplyDelivery' | 'SupplyRequest' | 'Task' | 'TerminologyCapabilities' | 'TestReport' | 'TestScript' | 'ValueSet' | 'VerificationResult' | 'VisionPrescription';
    updateCreate?: boolean;
    versioning?: 'no-version' | 'versioned' | 'versioned-update';
}

export interface CapabilityStatementRestResourceInteraction extends BackboneElement {
    code: 'read' | 'vread' | 'update' | 'patch' | 'delete' | 'history-instance' | 'history-type' | 'create' | 'search-type';
    documentation?: string;
}

export interface CapabilityStatementRestResourceOperation extends BackboneElement {
    definition: string;
    documentation?: string;
    name: string;
}

export interface CapabilityStatementRestResourceSearchParam extends BackboneElement {
    definition?: string;
    documentation?: string;
    name: string;
    type: 'number' | 'date' | 'string' | 'token' | 'reference' | 'composite' | 'quantity' | 'uri' | 'special';
}

export interface CapabilityStatementRestSecurity extends BackboneElement {
    cors?: boolean;
    description?: string;
    service?: CodeableConcept[];
}

export interface CapabilityStatementSoftware extends BackboneElement {
    name: string;
    releaseDate?: string;
    version?: string;
}

export interface CapabilityStatement extends DomainResource {
    contact?: ContactDetail[];
    copyright?: string;
    _copyright?: Element;
    date: string;
    _date?: Element;
    description?: string;
    _description?: Element;
    document?: CapabilityStatementDocument[];
    experimental?: boolean;
    _experimental?: Element;
    fhirVersion: '0.01' | '0.05' | '0.06' | '0.11' | '0.0.80' | '0.0.81' | '0.0.82' | '0.4.0' | '0.5.0' | '1.0.0' | '1.0.1' | '1.0.2' | '1.1.0' | '1.4.0' | '1.6.0' | '1.8.0' | '3.0.0' | '3.0.1' | '3.3.0' | '3.5.0' | '4.0.0' | '4.0.1';
    _fhirVersion?: Element;
    format: string[];
    _format?: Element;
    implementation?: CapabilityStatementImplementation;
    implementationGuide?: string[];
    _implementationGuide?: Element;
    imports?: string[];
    _imports?: Element;
    instantiates?: string[];
    _instantiates?: Element;
    jurisdiction?: CodeableConcept[];
    kind: 'instance' | 'capability' | 'requirements';
    _kind?: Element;
    messaging?: CapabilityStatementMessaging[];
    name?: string;
    _name?: Element;
    patchFormat?: string[];
    _patchFormat?: Element;
    publisher?: string;
    _publisher?: Element;
    purpose?: string;
    _purpose?: Element;
    rest?: CapabilityStatementRest[];
    software?: CapabilityStatementSoftware;
    status: 'draft' | 'active' | 'retired' | 'unknown';
    _status?: Element;
    title?: string;
    _title?: Element;
    url?: string;
    _url?: Element;
    useContext?: UsageContext[];
    version?: string;
    _version?: Element;
}

