// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import { Address } from './Address';
import { Age } from './Age';
import { Annotation } from './Annotation';
import { Attachment } from './Attachment';
import { BackboneElement } from './BackboneElement';
import { CodeableConcept } from './CodeableConcept';
import { Coding } from './Coding';
import { ContactDetail } from './ContactDetail';
import { ContactPoint } from './ContactPoint';
import { Contributor } from './Contributor';
import { Count } from './Count';
import { DataRequirement } from './DataRequirement';
import { Distance } from './Distance';
import { Dosage } from './Dosage';
import { Duration } from './Duration';
import { Expression } from './Expression';
import { HumanName } from './HumanName';
import { Identifier } from './Identifier';
import { Meta } from './Meta';
import { Money } from './Money';
import { ParameterDefinition } from './ParameterDefinition';
import { Period } from './Period';
import { Quantity } from './Quantity';
import { Range } from './Range';
import { Ratio } from './Ratio';
import { Reference } from './Reference';
import { RelatedArtifact } from './RelatedArtifact';
import { SampledData } from './SampledData';
import { Signature } from './Signature';
import { Timing } from './Timing';
import { TriggerDefinition } from './TriggerDefinition';
import { UsageContext } from './UsageContext';


export interface ElementDefinitionBase extends BackboneElement {
    max: string;
    min: number;
    path: string;
}

export interface ElementDefinitionBinding extends BackboneElement {
    description?: string;
    strength: 'required' | 'extensible' | 'preferred' | 'example';
    valueSet?: string;
}

export interface ElementDefinitionConstraint extends BackboneElement {
    expression?: string;
    human: string;
    key: string;
    requirements?: string;
    severity: 'error' | 'warning';
    source?: string;
    xpath?: string;
}

export interface ElementDefinitionExample extends BackboneElement {
    label: string;
    valueAddress?: Address;
    valueAge?: Age;
    valueAnnotation?: Annotation;
    valueAttachment?: Attachment;
    valueBase64Binary?: string;
    valueBoolean?: boolean;
    valueCanonical?: string;
    valueCode?: string;
    valueCodeableConcept?: CodeableConcept;
    valueCoding?: Coding;
    valueContactDetail?: ContactDetail;
    valueContactPoint?: ContactPoint;
    valueContributor?: Contributor;
    valueCount?: Count;
    valueDataRequirement?: DataRequirement;
    valueDate?: string;
    valueDateTime?: string;
    valueDecimal?: number;
    valueDistance?: Distance;
    valueDosage?: Dosage;
    valueDuration?: Duration;
    valueExpression?: Expression;
    valueHumanName?: HumanName;
    valueId?: string;
    valueIdentifier?: Identifier;
    valueInstant?: string;
    valueInteger?: number;
    valueMarkdown?: string;
    valueMeta?: Meta;
    valueMoney?: Money;
    valueOid?: string;
    valueParameterDefinition?: ParameterDefinition;
    valuePeriod?: Period;
    valuePositiveInt?: number;
    valueQuantity?: Quantity;
    valueRange?: Range;
    valueRatio?: Ratio;
    valueReference?: Reference;
    valueRelatedArtifact?: RelatedArtifact;
    valueSampledData?: SampledData;
    valueSignature?: Signature;
    valueString?: string;
    valueTime?: string;
    valueTiming?: Timing;
    valueTriggerDefinition?: TriggerDefinition;
    valueUnsignedInt?: number;
    valueUri?: string;
    valueUrl?: string;
    valueUsageContext?: UsageContext;
    valueUuid?: string;
}

export interface ElementDefinitionMapping extends BackboneElement {
    comment?: string;
    identity: string;
    language?: string;
    map: string;
}

export interface ElementDefinitionSlicing extends BackboneElement {
    description?: string;
    discriminator?: ElementDefinitionSlicingDiscriminator[];
    ordered?: boolean;
    rules: 'closed' | 'open' | 'openAtEnd';
}

export interface ElementDefinitionSlicingDiscriminator extends BackboneElement {
    path: string;
    type: 'value' | 'exists' | 'pattern' | 'type' | 'profile';
}

export interface ElementDefinitionType extends BackboneElement {
    aggregation?: 'contained' | 'referenced' | 'bundled'[];
    code: string;
    profile?: string[];
    targetProfile?: string[];
    versioning?: 'either' | 'independent' | 'specific';
}

export interface ElementDefinition extends BackboneElement {
    alias?: string[];
    _alias?: Element;
    base?: ElementDefinitionBase;
    binding?: ElementDefinitionBinding;
    code?: Coding[];
    comment?: string;
    _comment?: Element;
    condition?: string[];
    _condition?: Element;
    constraint?: ElementDefinitionConstraint[];
    contentReference?: string;
    _contentReference?: Element;
    defaultValueAddress?: Address;
    defaultValueAge?: Age;
    defaultValueAnnotation?: Annotation;
    defaultValueAttachment?: Attachment;
    defaultValueBase64Binary?: string;
    _defaultValueBase64Binary?: Element;
    defaultValueBoolean?: boolean;
    _defaultValueBoolean?: Element;
    defaultValueCanonical?: string;
    _defaultValueCanonical?: Element;
    defaultValueCode?: string;
    _defaultValueCode?: Element;
    defaultValueCodeableConcept?: CodeableConcept;
    defaultValueCoding?: Coding;
    defaultValueContactDetail?: ContactDetail;
    defaultValueContactPoint?: ContactPoint;
    defaultValueContributor?: Contributor;
    defaultValueCount?: Count;
    defaultValueDataRequirement?: DataRequirement;
    defaultValueDate?: string;
    _defaultValueDate?: Element;
    defaultValueDateTime?: string;
    _defaultValueDateTime?: Element;
    defaultValueDecimal?: number;
    _defaultValueDecimal?: Element;
    defaultValueDistance?: Distance;
    defaultValueDosage?: Dosage;
    defaultValueDuration?: Duration;
    defaultValueExpression?: Expression;
    defaultValueHumanName?: HumanName;
    defaultValueId?: string;
    _defaultValueId?: Element;
    defaultValueIdentifier?: Identifier;
    defaultValueInstant?: string;
    _defaultValueInstant?: Element;
    defaultValueInteger?: number;
    _defaultValueInteger?: Element;
    defaultValueMarkdown?: string;
    _defaultValueMarkdown?: Element;
    defaultValueMeta?: Meta;
    defaultValueMoney?: Money;
    defaultValueOid?: string;
    _defaultValueOid?: Element;
    defaultValueParameterDefinition?: ParameterDefinition;
    defaultValuePeriod?: Period;
    defaultValuePositiveInt?: number;
    _defaultValuePositiveInt?: Element;
    defaultValueQuantity?: Quantity;
    defaultValueRange?: Range;
    defaultValueRatio?: Ratio;
    defaultValueReference?: Reference;
    defaultValueRelatedArtifact?: RelatedArtifact;
    defaultValueSampledData?: SampledData;
    defaultValueSignature?: Signature;
    defaultValueString?: string;
    _defaultValueString?: Element;
    defaultValueTime?: string;
    _defaultValueTime?: Element;
    defaultValueTiming?: Timing;
    defaultValueTriggerDefinition?: TriggerDefinition;
    defaultValueUnsignedInt?: number;
    _defaultValueUnsignedInt?: Element;
    defaultValueUri?: string;
    _defaultValueUri?: Element;
    defaultValueUrl?: string;
    _defaultValueUrl?: Element;
    defaultValueUsageContext?: UsageContext;
    defaultValueUuid?: string;
    _defaultValueUuid?: Element;
    definition?: string;
    _definition?: Element;
    example?: ElementDefinitionExample[];
    fixedAddress?: Address;
    fixedAge?: Age;
    fixedAnnotation?: Annotation;
    fixedAttachment?: Attachment;
    fixedBase64Binary?: string;
    _fixedBase64Binary?: Element;
    fixedBoolean?: boolean;
    _fixedBoolean?: Element;
    fixedCanonical?: string;
    _fixedCanonical?: Element;
    fixedCode?: string;
    _fixedCode?: Element;
    fixedCodeableConcept?: CodeableConcept;
    fixedCoding?: Coding;
    fixedContactDetail?: ContactDetail;
    fixedContactPoint?: ContactPoint;
    fixedContributor?: Contributor;
    fixedCount?: Count;
    fixedDataRequirement?: DataRequirement;
    fixedDate?: string;
    _fixedDate?: Element;
    fixedDateTime?: string;
    _fixedDateTime?: Element;
    fixedDecimal?: number;
    _fixedDecimal?: Element;
    fixedDistance?: Distance;
    fixedDosage?: Dosage;
    fixedDuration?: Duration;
    fixedExpression?: Expression;
    fixedHumanName?: HumanName;
    fixedId?: string;
    _fixedId?: Element;
    fixedIdentifier?: Identifier;
    fixedInstant?: string;
    _fixedInstant?: Element;
    fixedInteger?: number;
    _fixedInteger?: Element;
    fixedMarkdown?: string;
    _fixedMarkdown?: Element;
    fixedMeta?: Meta;
    fixedMoney?: Money;
    fixedOid?: string;
    _fixedOid?: Element;
    fixedParameterDefinition?: ParameterDefinition;
    fixedPeriod?: Period;
    fixedPositiveInt?: number;
    _fixedPositiveInt?: Element;
    fixedQuantity?: Quantity;
    fixedRange?: Range;
    fixedRatio?: Ratio;
    fixedReference?: Reference;
    fixedRelatedArtifact?: RelatedArtifact;
    fixedSampledData?: SampledData;
    fixedSignature?: Signature;
    fixedString?: string;
    _fixedString?: Element;
    fixedTime?: string;
    _fixedTime?: Element;
    fixedTiming?: Timing;
    fixedTriggerDefinition?: TriggerDefinition;
    fixedUnsignedInt?: number;
    _fixedUnsignedInt?: Element;
    fixedUri?: string;
    _fixedUri?: Element;
    fixedUrl?: string;
    _fixedUrl?: Element;
    fixedUsageContext?: UsageContext;
    fixedUuid?: string;
    _fixedUuid?: Element;
    isModifier?: boolean;
    _isModifier?: Element;
    isModifierReason?: string;
    _isModifierReason?: Element;
    isSummary?: boolean;
    _isSummary?: Element;
    label?: string;
    _label?: Element;
    mapping?: ElementDefinitionMapping[];
    max?: string;
    _max?: Element;
    maxLength?: number;
    _maxLength?: Element;
    maxValueDate?: string;
    _maxValueDate?: Element;
    maxValueDateTime?: string;
    _maxValueDateTime?: Element;
    maxValueDecimal?: number;
    _maxValueDecimal?: Element;
    maxValueInstant?: string;
    _maxValueInstant?: Element;
    maxValueInteger?: number;
    _maxValueInteger?: Element;
    maxValuePositiveInt?: number;
    _maxValuePositiveInt?: Element;
    maxValueQuantity?: Quantity;
    maxValueTime?: string;
    _maxValueTime?: Element;
    maxValueUnsignedInt?: number;
    _maxValueUnsignedInt?: Element;
    meaningWhenMissing?: string;
    _meaningWhenMissing?: Element;
    min?: number;
    _min?: Element;
    minValueDate?: string;
    _minValueDate?: Element;
    minValueDateTime?: string;
    _minValueDateTime?: Element;
    minValueDecimal?: number;
    _minValueDecimal?: Element;
    minValueInstant?: string;
    _minValueInstant?: Element;
    minValueInteger?: number;
    _minValueInteger?: Element;
    minValuePositiveInt?: number;
    _minValuePositiveInt?: Element;
    minValueQuantity?: Quantity;
    minValueTime?: string;
    _minValueTime?: Element;
    minValueUnsignedInt?: number;
    _minValueUnsignedInt?: Element;
    mustSupport?: boolean;
    _mustSupport?: Element;
    orderMeaning?: string;
    _orderMeaning?: Element;
    path: string;
    _path?: Element;
    patternAddress?: Address;
    patternAge?: Age;
    patternAnnotation?: Annotation;
    patternAttachment?: Attachment;
    patternBase64Binary?: string;
    _patternBase64Binary?: Element;
    patternBoolean?: boolean;
    _patternBoolean?: Element;
    patternCanonical?: string;
    _patternCanonical?: Element;
    patternCode?: string;
    _patternCode?: Element;
    patternCodeableConcept?: CodeableConcept;
    patternCoding?: Coding;
    patternContactDetail?: ContactDetail;
    patternContactPoint?: ContactPoint;
    patternContributor?: Contributor;
    patternCount?: Count;
    patternDataRequirement?: DataRequirement;
    patternDate?: string;
    _patternDate?: Element;
    patternDateTime?: string;
    _patternDateTime?: Element;
    patternDecimal?: number;
    _patternDecimal?: Element;
    patternDistance?: Distance;
    patternDosage?: Dosage;
    patternDuration?: Duration;
    patternExpression?: Expression;
    patternHumanName?: HumanName;
    patternId?: string;
    _patternId?: Element;
    patternIdentifier?: Identifier;
    patternInstant?: string;
    _patternInstant?: Element;
    patternInteger?: number;
    _patternInteger?: Element;
    patternMarkdown?: string;
    _patternMarkdown?: Element;
    patternMeta?: Meta;
    patternMoney?: Money;
    patternOid?: string;
    _patternOid?: Element;
    patternParameterDefinition?: ParameterDefinition;
    patternPeriod?: Period;
    patternPositiveInt?: number;
    _patternPositiveInt?: Element;
    patternQuantity?: Quantity;
    patternRange?: Range;
    patternRatio?: Ratio;
    patternReference?: Reference;
    patternRelatedArtifact?: RelatedArtifact;
    patternSampledData?: SampledData;
    patternSignature?: Signature;
    patternString?: string;
    _patternString?: Element;
    patternTime?: string;
    _patternTime?: Element;
    patternTiming?: Timing;
    patternTriggerDefinition?: TriggerDefinition;
    patternUnsignedInt?: number;
    _patternUnsignedInt?: Element;
    patternUri?: string;
    _patternUri?: Element;
    patternUrl?: string;
    _patternUrl?: Element;
    patternUsageContext?: UsageContext;
    patternUuid?: string;
    _patternUuid?: Element;
    representation?: 'xmlAttr' | 'xmlText' | 'typeAttr' | 'cdaText' | 'xhtml'[];
    _representation?: Element;
    requirements?: string;
    _requirements?: Element;
    short?: string;
    _short?: Element;
    sliceIsConstraining?: boolean;
    _sliceIsConstraining?: Element;
    sliceName?: string;
    _sliceName?: Element;
    slicing?: ElementDefinitionSlicing;
    type?: ElementDefinitionType[];
}

